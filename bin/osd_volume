#!/usr/bin/env bash

APP_NAME="${0##*/}"
VOL_STEP="${2:-5}" # amount to increase / decrease volume

if [ "$1" = "mute" ]; then
    amixer -c $CARD set $CHANNEL toggle >/dev/null 2>&1
elif [ "$1" = "up" ]; then
    pactl set-sink-volume @DEFAULT_SINK@ +$VOL_STEP%
    amixer -c $CARD sset $CHANNEL $VOL_STEP+, unmute >/dev/null 2>&1
elif [ "$1" = "down" ]; then
    amixer -c $CARD sset $CHANNEL $VOL_STEP-, unmute >/dev/null 2>&1
else
    echo "Usage: $0 up|down|mute"
    exit 1
fi


MIXER_OUTPUT=$(amixer -c $CARD sget ${CHANNEL})
ISMUTED=$(echo $MIXER_OUTPUT | fgrep -c '[on]')
VOLUME=$( echo $MIXER_OUTPUT | awk -W posix -F'[][]' '/dB/ { gsub("%", ""); print $2 }')
echo $MIXER_OUTPUT
echo $ISMUTED

readonly NOTIFICAION_ID=842921
readonly TIMEOUT=1500

showNotificationDunst() {
    local volume=$1
    local icon=$2
    local notificationID=$3
    local message=$4

    dunstify "$message" \
        -r $notificationID \
        -i $icon \
        -t $TIMEOUT \
        -h "int:value:$volume" \
        -h string:synchronous:volume $message
}
showNotificationNotifySend() {
    local volume=$1
    local icon=$2
    local notificationID=$3
    local message=$4

    notify-send "$message" \
        -i "$icon" \
        -t $TIMEOUT \
        -h "int:value:$volume" \
        -h string:x-canonical-private-synchronous:volume
}
showNotificationImpl=showNotificationNotifySend

if [ $ISMUTED -eq 0 ]; then
    $showNotificationImpl $VOLUME 'audio-volume-muted' $NOTIFICAION_ID 'muted'
else
    if [ $VOLUME -gt 66 ]; then
        ICON='audio-volume-high'
    elif [ $VOLUME -gt 33 ]; then
        ICON='audio-volume-medium'
    else
        ICON='audio-volume-low'
    fi
    $showNotificationImpl $VOLUME $ICON $NOTIFICAION_ID ' '
fi
